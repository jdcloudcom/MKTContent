<p style="text-indent: 2em;">According to the Global Serverless Architecture Market, a report released by KBV Research Company, the scale of the global Serverless architecture market is predicted to reach 14 billion US Dollars in 2024 and to increase at an annual compound growth rate of 23.4% in this prediction period. From the perspective of development, a lower operating cost and higher process flexibility have promoted the implementation of the Serverless architecture. Serverless covers lots of technologies, and FaaS is a core component therein.</p>
<p style="text-indent: 2em;"><br/></p>
<p style="text-align: center;"><img src="//img1.jcloudcs.com/cms/6801f560-fc01-4c39-a276-88b61f5edb9820190430155634.jpg" title="" alt="云计算迈向纵深，京东云开启Serverless架构应用——函数服务.jpg"/></p>
<p style="text-indent: 2em;"><br/></p>
<p style="text-indent: 2em;">Recently, JD Cloud introduced the Serverless FaaS service--Function Service, an event-driven computing service (OSS Object Storage Service and sources of API gateway events are supported in the early stage of an open beta test). With computing resources provided by Function Service, users only need to write the business function code and set the running conditions to run the code flexibly and reliably, quickly build any type of application and service, and pay only for the resources that the code actually consumes.</p>
<p style="text-indent: 2em;"><br/></p>
<p style="text-indent: 2em;">TIPS：</p>
<p style="text-indent: 2em;">The interface provided by Serverless simplifies the programming of cloud computing, which represents the leapfrog change of the productivity of programmers just like the evolution of programming language from assembly era to high-level language era. -  Simplifying the Cloud Programming: Serverless Computing under the Perspective of Berkeley</p>
<p style="text-indent: 2em;"><br/></p>
<p style="text-indent: 2em;">FaaS can be regarded as the recent development of PaaS. FaaS further separates the original computing capability, so it is not necessary to care about the infrastructure such as the underlayer server, and it is only required to care about the business itself, so that the overall business is lightweight. As a computing component in the Serverless architecture, FaaS bonds other products or services and achieves business logics. So all the work is completed in the function. Compared with traditional containers, FaaS runs fully automatically; services can concur by themselves as events accumulate, to easily deal with the peak and trough of business, and usage of computing resources and fee collection are enabled only when the code operates. It reflects that the cloud computing service has developed deeply.</p>
<p style="text-indent: 2em;"><br/></p>
<p style="text-indent: 2em;">As a core component in the Serverless architecture, the Function Service can be applied to various Serverless architectures: Mobile application background, real-time file processing, Web application, backstage of IoT application, real-time stream processing, extraction and analysis of AI data, etc. For example:</p>
<p><br/></p>
<p style="text-indent: 2em;">The function is triggered to execute through the notification event of Object Storage Service callback. For instance, under the analysis and processing scenario of multimedia contents, files are uploaded to the OSS Bucket, and application programs can automatically process (extraction, transcoding, zoom, and so on) a user’s multimedia files by creating Function, then save the processed results to specified OSS Bucket.</p>
<p style="text-indent: 2em;"><br/></p>
<p style="text-indent: 2em;">The backend services of the Web client and mobile client are built by the API Gateway and Function Service, reducing the system input and rapidly establishing applications and services.</p>
<p style="text-indent: 2em;">Serverless is featured by zero operation and maintenance, auto scaling, billing on demand, etc. With the massive computing resources provided by JD Cloud, the Function Service has a nearly unlimited elastic expansion capability, and developers can easily and quickly conduct iteration and deployment, more effectively make use of computing resources and greatly reduce the operating and development costs, by only focusing on the code itself.</p>
<p><br/></p>
