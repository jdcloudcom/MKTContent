[
	{
		"txt":"{\"instruction\":[],\"productName\":\"Native Container\",\"label\":[{\"TitleName\":\"Apply for Pod Beta\",\"TitleUrl\":\"https://www.jdcloud.com/cn/public/testApply/pod\",\"classTag\":\"\"},{\"TitleName\":\"Buy Now Instances\",\"TitleUrl\":\"https://console.jdcloud.com/host/container/create?dataCenter=cn-north-1\",\"classTag\":\"\"}],\"desc\":\"The Native Container is an innovative container product that is released based on JD Cloud’s deep accumulation in container technology. The product fully integrates the advantages of containers and virtual machines. It does not need to manage the virtual machine or the cluster and provides users with a safe and easy-to-use container service with flexible billing method, which effectively reduces the invested costs of the users.\",\"iconUrl\":\"\",\"imageUrl\":\"//jdcloud-portal.oss.cn-north-1.jcloudcs.com/www.jcloud.com/a9d617a6-853f-4efd-85d3-3f650033e9cc20181115162830.svg\",\"middleClstag\":\"Products|keycount|MiddleContentSec|32\",\"sectionClstag\":\"Products|keycount|SectionBannerSec|32\"}",
		"id":66
	},
	{
		"txt":"[{\"proGood\":\"Safe Isolation\",\"proName\":\"It adopts the independent core technology and avoids the hidden hazards of sharing a kernel among containers based on the isolation of virtual machine. Different tenants are completely isolated based on the SDN technology.\"},{\"proGood\":\"Simple and User-friendly\",\"proName\":\"The container can be quickly used without managing clusters or studying programming tools and the container supports Docker image, so that the users can focus on APPs. OpenAPI is provided to increase service efficiency.\"},{\"proGood\":\"Flexible Architecture\",\"proName\":\"The private interconnection between the container instance and the resources, e.g. public cloud computing, storage and network, is realized in the same Virtual Private Cloud, with the aim to fully utilize the rich product resources.\"},{\"proGood\":\"Rich Configuration\",\"proName\":\"Native Container is designed with four main models, i.e. general, compute-optimized, memory-optimized Native Container and high-frequency compute. It supports 1-core 1G (minimum) and 72-core 576G (maximum).\"},{\"proGood\":\"Flexible Billing\",\"proName\":\"Two billing methods are supported, i.e. monthly package and pay by configuration. In case of pay by configuration, the billing is adopted in seconds and the minimum billing period is five minutes, and the actual service time is accumulated and billing is not made in a halted state.\"}]",
		"id":67
	},
	{
		"txt":"[{\"funcContent\":[{\"funcP\":\"It supports Native Container Instance and Native Container Pod; JD Cloud console provides separated operation interfaces for the two types of Native Containers.\",\"funcTitle\":\"Product Form\"},{\"funcP\":\"Only a single Container runs in a Container Instance; the Container exclusively enjoys all the resources defined by Instance Type.\",\"funcTitle\":\"Native Container Instance\"},{\"funcTitle\":\"Native Container Pod\",\"funcP\":\"Compatible with Kubernetes Pod definition, one Pod encapsulates multiple Containers of shared kernel, network and file system.\"}],\"funcName\":\"Product Type\"},{\"funcContent\":[{\"funcP\":\"JD Cloud provides the Native Container with four different types and configurations including the general type, compute optimized type, memory optimized type and high frequency compute, which can easily address various micro-miniature and large services. It can fully satisfy the demands of different service types so that the users can buy them as needed.\",\"funcTitle\":\"Enrich Configuration\"},{\"funcTitle\":\"Flexible Billing\",\"funcP\":\"JD Cloud Native Container provides the billing type of pay by configuration, which reduces the billing granularity to second level. It does not charge when the resources are in stop status. The minimum billing cycle is 5 minutes. It supports monthly package that can lower investment cost efficiently.\"}],\"funcName\":\"Specification and Billing\"},{\"funcContent\":[{\"funcP\":\"Cloud Disk provides Native Container Instance and Native Container Pod with persistence storage with low latency and high reliability.\",\"funcTitle\":\"Persistence Storage\"},{\"funcP\":\"Cloud Disk provides customers with Premium Hdd Cloud Disk and SSD Cloud Disk. It supports setting the capacity of Cloud Disk as required and the capacity can be expanded at any time to satisfy the rapid growth of service. In addition, Cloud Disk provides the function of making snapshot that can further satisfy data backup, batch deployment, rapid restore and other demand scenarios.\",\"funcTitle\":\"Cloud Disk and Snapshot\"}],\"funcName\":\"Reliable Storage\"},{\"funcContent\":[{\"funcP\":\"Virtual Private Cloud allocates a private space of isolation security for users. Virtual Private Cloud is independent and isolated with each other, deploying Native Container Instance and Native Container Pod in different Virtual Private Clouds can implement network isolation. The users are in full control of the network management, which supports subnet independent division, Public IP configuration, etc. Moreover, it can apply VPN or dedicated line to connect user local servers with JD Cloud Native Container Instance or Native Container Pod to implement the expansion of current network deployment.\",\"funcTitle\":\"Network Isolation\"},{\"funcP\":\"The elastic IP is associated with the JD Cloud account and the users can associate the elastic IP with any Native Container Instance and Native Container Pod in the same region, to enable Internet access of resources and adjust bandwidth and change associated resources based on real usage of the network at the same time.\",\"funcTitle\":\"Elastic IP\"}],\"funcName\":\"Network\"},{\"funcContent\":[{\"funcP\":\"The security group is a kind of distributed and stateful virtual firewall, with the features of detecting and filtering data packages coming in and out from the Native Container Instance and the Native Container Pod. By applying the security group, network access control for single or multiple groups of resources can be implemented, including the east-west traffic between resources and south-north traffic of communication between resources and public network.\",\"funcTitle\":\"Security Group\"},{\"funcTitle\":\"Monitoring\",\"funcP\":\"Provide multi-dimension monitoring, facilitating the users to control usage, performance and running status of container resources in real time. Support customized alarm rules for different monitoring indicators, send alarm notifications via SMS, email, etc., meet the demands in different user scenarios, and ensure the continuous and stable running of applications\"}],\"funcName\":\"Security Group and Monitoring\"},{\"funcName\":\"Image\",\"funcContent\":[{\"funcTitle\":\"Image\",\"funcP\":\"Directly run the Native Container Instance and Native Container Pod based on Docker Image to quickly implement lightweight deployment and rapid start.\"},{\"funcTitle\":\"Container Registry\",\"funcP\":\"Seamlessly integrated with JD Cloud Container Registry to implement high-speed image download and accelerate the deployment of container application.\"}]},{\"funcName\":\"Health Check\",\"funcContent\":[{\"funcTitle\":\"Survival and ready detection\",\"funcP\":\"It supports survival detection for configuration container of Native Container Pod, automatically re-detects ailed container; supports configuration ready detection and reports the detected status in real time to provide reliable basis for upper applications to determine the container status.\"}]},{\"funcName\":\"Compatible with Kubernetes\",\"funcContent\":[{\"funcTitle\":\"Integrated with Kubernetes\",\"funcP\":\"Create Kubernetes resources based on the Native Container Pod in JCS for Kubernetes through virtual Kubelet\"}]}]",
		"id":68
	},
	{
		"txt":"[{\"instruction\":\"By analyzing and conducting the business modeling to specific business lines, the micro service-oriented architecture can strip complicated business logics into a group of small, dedicated services of low coupling degree and high autonomy degree. The features of native containers (i.e. lightweight level and unified deployment) bring a brand new thought for unified management, scheduling and deployment of each micro service, and greatly reduces dependency between services and between versions, achieving high consistence in different environment for the same micro service.\",\"name\":\"Micro service-oriented architecture\",\"picUrl\":\"//img1.jcloudcs.com/cms/5245ae87-bd45-49bd-bbc2-e4ab0b50bd3820170906172556.jpg\",\"selectedProduct\":[],\"buttons\":{\"name\":\"\",\"link\":\"\",\"classTag\":\"\"},\"showShade\":false},{\"instruction\":\"Provide the users with basic development environment based on DevOps Platform of Native Container, making the developers only need to pay attention to the installation and configuration workload of code development reduction tools. At the same time, diversified docker images enable the operation and maintenance personnel to quickly deploy and develop the needed services on the Platform. Support service associate through environment variables. Realize the isolation of development environment, test environment and production environment as well as quick environment setup and recovery, and improve the overall efficiency.\",\"name\":\"Continuous Integration and Continuous Deployment\",\"picUrl\":\"//img1.jcloudcs.com/cms/2d0819c6-d421-4f4f-8ecd-db26aaa723dd20170906172622.jpg\",\"selectedProduct\":[],\"buttons\":{\"name\":\"\",\"link\":\"\",\"classTag\":\"\"},\"showShade\":false},{\"instruction\":\" With the ability of quick start, rapid deployment, and massive concurrency, containers can be used to meet the unexpected needs of the business in applications that require large changes in demand and require hundreds or even thousands of machines to be quickly started up.\",\"name\":\"Quick Auto Scaling\",\"picUrl\":\"//img1.jcloudcs.com/cms/91168fe9-a324-44bd-a752-8af5448bb9d120170906172649.png\",\"selectedProduct\":[],\"buttons\":{\"name\":\"\",\"link\":\"\",\"classTag\":\"\"},\"showShade\":false}]",
		"id":69
	},
	{
		"txt":"{\"operatingClasstag\":\"Products|keycount|MiddleContentSec|32\",\"price\":\"//docs.jdcloud.com/native-container/price-overview\",\"sectionClstag\":\"Products|keycount|SectionBannerSec|32\"}",
		"id":70
	}
]