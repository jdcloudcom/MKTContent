[
	{
		"txt":"{\"instruction\":[],\"productName\":\"物联网操作系统\",\"label\":[{\"TitleName\":\"获取京东服务组件\",\"TitleUrl\":\"https://github.com/RT-Thread-packages/joylink\",\"classTag\":\"1\"},{\"TitleName\":\"获取开源代码\",\"TitleUrl\":\"https://github.com/RT-Thread/rt-thread\",\"classTag\":\"1\"}],\"desc\":\"提供面向物联网的实时操作系统，可广泛应用于智能家居、智能城市、智慧工业等物联网领域。内置京东智联云物联网服务和协议，支持在各种资源受限的芯片上运行，可以用来快速接入智能产品及使用京东智联云物联网服务。\"}",
		"id":1924
	},
	{
		"txt":"[{\"showShade\":false,\"proGood\":\"组件丰富\",\"proName\":\"RT-Thread 软件包为嵌入式、物联网开发提供了丰富的软件组件，轻松扩展系统功能，缩减开发周期。\"},{\"showShade\":false,\"proGood\":\"快速接入平台\",\"proName\":\"物联网操作系统内置京东的物联网服务，产品使用该系统可快速接入平台，节省对接时间。\"},{\"showShade\":false,\"imageUrl\":\"\",\"proGood\":\"简单易用\",\"proName\":\"C 语言开发，无门槛；统一的 UNIX 代码风格；强大的一站式开发平台 RT-Thread Studio，图形化 IDE。\"},{\"showShade\":false,\"imageUrl\":\"\",\"proGood\":\"跨芯片平台\",\"proName\":\"无论选择什么样的微控制器，使用RT-Thread接口编程的应用程序都可以高度复用。\"},{\"showShade\":false,\"imageUrl\":\"\",\"proGood\":\"丰富的传感器支持\",\"proName\":\"RT-Thread 传感器徽标计划，与众多传感器厂商通力合作，在 RT-Thread 操作系统层面提供统一、标准化的传感器驱动支持包，提高开发效率。\"},{\"showShade\":false,\"imageUrl\":\"\",\"proGood\":\"高度可伸缩、可复用\",\"proName\":\"功能组件模块化设计，与 OS 内核松耦合，通过图形化 IDE 裁剪或扩展，轻松适配不同硬件平台和业务场景，一次开发终身可用。\"}]",
		"id":1925
	},
	{
		"txt":"[{\"funcName\":\"硬实时内核\",\"funcContent\":[{\"funcTitle\":\"基于时间片轮转的抢占式实时多任务 RTOS。\",\"funcP\":\"RT-Thread 是一个极简的硬实时内核，是一款可裁剪的、抢占式实时多任务的 RTOS。它还具备体积小、启动快速、实时性高、占用资源小等特点。\"}]},{\"funcName\":\"平台接入能力\",\"funcContent\":[{\"funcTitle\":\"物联网操作系统内置京东物联网模块，快速、安全的接入平台。\",\"funcP\":\"物联网操作系统内置了京东物联网模块，包括，包括配网、设备控制，OTA升级，安全认证及策略等，极大提升产品接入效率，增强安全性。\"}]},{\"funcName\":\"DFS 虚拟文件系统\",\"funcContent\":[{\"funcTitle\":\"DFS(Device File System) 设备文件系统是 RT-Thread 为了统一管理不同存储介质和文件系统类型而实现的一个软件组件。\",\"funcP\":\"为应用程序提供统一的 POSIX 文件和目录操作接口：read、write、poll/select 等。支持多种类型的文件系统，如 FatFS、RomFS、DevFS 等，并提供普通文件、设备文件、网络文件描述符的管理。 支持多种类型的存储设备，如 SD Card、SPI Flash、Nand Flash 等。\"}]},{\"funcName\":\"AT 框架\",\"funcContent\":[{\"funcTitle\":\"有各种各样的网络 AT 模块，为了便于开发，RT-Thread 抽象实现了 AT 框架，可以通过 BSD socket 标准接口操作 AT 模块。\",\"funcP\":\"AT 组件是基于 RT-Thread 系统的 AT Server 和 AT Client 的实现，组件完成 AT 命令的发送、命令格式及参数判断、命令的响应、响应数据的接收、响应数据的解析、URC 数据处理等整个 AT 命令数据交互流程。\"}]},{\"funcName\":\"FinSH 控制台\",\"funcContent\":[{\"funcTitle\":\"FinSH 是 RT-Thread 的命令行组件，提供一套供用户在命令行调用的操作接口，主要用于调试或查看系统信息。它可以使用串口 / 以太网 / USB 等与 PC 机进行通信。\",\"funcP\":\"FinSH 是嵌入式平台下的 shell 终端。有了 shell，就像在开发者和计算机之间架起了一座沟通的桥梁，开发者能很方便的获取系统的运行情况，并通过命令控制系统的运行。\"}]},{\"funcName\":\"SMP/AMP 支持\",\"funcContent\":[{\"funcTitle\":\"对称多核和异构多核硬件平台的支持。\",\"funcP\":\"支持在多个核同时运行 RT-Thread 操作系统，统一调度管理。\"}]},{\"funcName\":\"SAL 网络抽象层\",\"funcContent\":[{\"funcTitle\":\"SAL(Socket abstraction layer)套接字抽象层是为了实现不同网络类型的统一操作。\",\"funcP\":\"为了适配更多的网络协议栈类型，避免系统对单一网络协议栈的依赖，RT-Thread 系统提供了一套 SAL（套接字抽象层）组件，\\n 该组件完成对不同网络协议栈或网络实现接口的抽象并对上层提供一组标准的 BSD Socket API，这样开发者只需要关心和使用网络应用层提供的网络接口， 而无需关心底层具体网络协议栈类型和实现，极大的提高了系统的兼容性，方便开发者完成协议栈的适配和网络相关的开发。\"}]},{\"funcName\":\"Cortex-A、Cortex-M 平台微内核支持\",\"funcContent\":[{\"funcTitle\":\"RT-Thread 微内核架构在 Cortex-A 和 Cortex-M 平台上实现了应用和内核分离的机制，更加安全可靠，适用于高安全标准的应用场景。\",\"funcP\":\"更加安全的 OS 架构，支持权限分离、应用隔离、动态加载等高阶功能。\"}]}]",
		"id":1926
	}
]