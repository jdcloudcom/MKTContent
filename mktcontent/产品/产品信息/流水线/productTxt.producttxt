[
	{
		"txt":"{\"instruction\":[],\"productName\":\"CodePipeline\",\"label\":[{\"TitleName\":\"Apply for Beta\",\"TitleUrl\":\"https://www.jdcloud.com/public/testApply/codepipeline\",\"classTag\":\"\"}],\"desc\":\"JD Cloud CodePipeline is a product providing continuous integration and continuous delivery capability. The visual and customized automatic delivery CodePipeline ensures the uniformity and stability at different stages of product release.\",\"iconUrl\":\"\",\"imageUrl\":\"\",\"middleClstag\":\"Products|keycount|MiddleContentSec|1156\",\"sectionClstag\":\"Products|keycount|SectionBannerSec|1156\"}",
		"id":338
	},
	{
		"txt":"[{\"showShade\":false,\"proGood\":\"Easy and Simple Visual Configuration\",\"proName\":\"The pipeline can be customized on demand. In the configuration stage, tasks are executed in serial or parallel, to easily and quickly implement the continuous integration and continuous delivery process.\"},{\"showShade\":false,\"proGood\":\"Support of Multiple Deployment Methods\",\"proName\":\"Support cross-AZ and multi-VPC deployment. Carry out deep integration with JCS for Kubernetes, perform life cycle management for containerized application, provide multi-application release method and continuous delivery capability, and support microservice architecture.\"},{\"showShade\":false,\"imageUrl\":\"\",\"proGood\":\"Access of Full Process Tool Chain\",\"proName\":\"With the good platform integration capability, the seamless integration of CodePipeline and JD Cloud product ecology help users quickly build a complete tool chain and implement DevOps process.\"},{\"showShade\":false,\"imageUrl\":\"\",\"proGood\":\"Multiple Trigger Mechanism\",\"proName\":\"Upon Webhook trigger code submission, at a fixed time, manually or with other method for triggering the execution of CodePipelines\"}]",
		"id":339
	},
	{
		"txt":"[{\"funcName\":\"Realization of Release Process Automation\",\"funcContent\":[{\"funcTitle\":\"End-to-end CodePipeline\",\"funcP\":\"From code submission, construction, testing and deployment, the complete end-to-end CodePipeline function will be achieved. With the method of Webhook trigger or event listening, the CodePipeline executes automatically. Meanwhile, CodePipeline also provides manual control capability, and by adding manual approval and operation to the process of execution, it supports users to carry out manual test or deployment to different environment.\"},{\"funcTitle\":\"Customized CodePipeline\",\"funcP\":\"Based on different focuses of users at different stages of products, it supports flexible configuration of CodePipelines. Tasks in the same stage can be set as serial execution or parallel execution, to meet multiple customer scenarios\"}]},{\"funcName\":\"Common Tools for Connecting Users\",\"funcContent\":[{\"funcTitle\":\"Multiple Source Code Supplier\",\"funcP\":\"It supports multiple code management platform integration, and can seamlessly integrate with Git, GitHub, JD Cloud CodeCommit and other platforms to obtain source code\"},{\"funcTitle\":\"Continuous Integration\",\"funcP\":\"It supports the construction and unit test for multiple compiler languages such as Java, Golang, NodeJs and Python. It supports Docker image compiling, and compiling and security check are carried out with Docker Image service.\"},{\"funcTitle\":\"Continuous Deployment\",\"funcP\":\"Deep integration is carried out with JD Cloud JCS for Kubernetes service, life cycle management for containerized application is supported, and whole-process automation of application release under container environment is achieved\"}]},{\"funcName\":\"View Execution Record\",\"funcContent\":[{\"funcTitle\":\"View Process Execution Record\",\"funcP\":\"It supports viewing the execution status of CodePipeline, and viewing the detailed access operation information and operation records etc.\"},{\"funcTitle\":\"View Detailed Pipeline History Information\",\"funcP\":\"It supports view the detailed CodePipeline execution information, including start time, end time, execution duration and execution ID.\"}]}]",
		"id":340
	},
	{
		"txt":"[{\"name\":\"DevOps Continuous Delivery\",\"instruction\":\"With the help of CodePipeline, you can accomplish the complete DevOps process from code change to construction, test and deployment to ensure that only codes that pass the automatic test can be delivered and deployed, which efficiently replaces the traditional method that is complex in internal deployment and slow in iteration.\",\"recommend\":\"\",\"selectedProduct\":[{\"name\":\"DevOps\",\"url\":\"//www.jdcloud.com/products/devops\"},{\"name\":\"CodeCommit\",\"url\":\"//www.jdcloud.com/products/codecommit\"},{\"name\":\"CodeBuild\",\"url\":\"//www.jdcloud.com/products/codebuild\"}],\"buttons\":{\"name\":\"\",\"link\":\"\",\"classTag\":\"\"},\"picUrl\":\"//jdcloud-portal.oss.cn-north-1.jcloudcs.com/www.jcloud.com/6a8c9e4c-3161-40a2-ac43-77021f503d4e20181204185152.png\",\"showShade\":false},{\"name\":\"Integrated k8s Cluster\",\"instruction\":\"Deep integrated with JD Cloud Container Service not only offers the construction of Docker Image and uploads it to the Container Registry, but also communicates with JCS for Kubernetes to implement the automatic continuous delivery of Docker containerization application.\",\"recommend\":\"\",\"selectedProduct\":[{\"name\":\"Native Container\",\"url\":\"//www.jdcloud.com/products/native-container\"},{\"name\":\"JCS for Kubernetes\",\"url\":\"//www.jdcloud.com/products/jcs-for-kubernetes\"},{\"name\":\"CodeBuild\",\"url\":\"//www.jdcloud.com/products/codebuild\"}],\"buttons\":{\"name\":\"\",\"link\":\"\",\"classTag\":\"\"},\"picUrl\":\"//jdcloud-portal.oss.cn-north-1.jcloudcs.com/www.jcloud.com/5a0c5354-01fa-4126-9a32-b4aad445d1e420181204185157.png\",\"showShade\":false}]",
		"id":680
	}
]